from api.utils import get_workplace_list, toggle_workplace, get_debt_list
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, CallbackQueryHandler
from django.conf import settings

TELEGRAM_TOKEN = settings.TELEGRAM_TOKEN
CHAT_ID = settings.CHAT_ID

updater = Updater(token=TELEGRAM_TOKEN, use_context=True)

def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text(f"Group Chat ID: {update.message.chat_id}")




def debt(update: Update, context: CallbackContext) -> None:
    if update.message.chat_id != int(CHAT_ID):
        update.message.reply_text(text=f"üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    keyboard = []
    for place in workplaces:
        name = f'‚ùå {place.name}'
        if place.is_active:
            name = f'‚úÖ {place.name}'

        button = InlineKeyboardButton(text=name, callback_data=str(place.id))

        keyboard.append([button])

    button = InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="done")
    keyboard.append([button])
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(text="–°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å/–æ—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–∞–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ \"–≥–æ—Ç–æ–≤–æ\" —á—Ç–æ–±—ã –≤—ã–π—Ç–∏", reply_markup=reply_markup)



def get_keyboard():
    workplaces = get_workplace_list()
    keyboard = []
    for place in workplaces:
        name = f'‚ùå {place.name}'
        if place.is_active:
            name = f'‚úÖ {place.name}'

        button = InlineKeyboardButton(text=name, callback_data=str(place.id))

        keyboard.append([button])

    button = InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="done")
    keyboard.append([button])
    return keyboard


def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    workplace_id = query.data

    if workplace_id == 'done':
        query.message.delete()
        return

    if not toggle_workplace(workplace_id):
        query.answer(text="‚ö†Ô∏è –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ")

    new_keyboard = get_keyboard()
    new_markup = InlineKeyboardMarkup(new_keyboard)
    query.edit_message_text(text="–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—á–∏–µ –º–µ—Å—Ç–∞\n–Ω–∞–∂–º–∏—Ç–µ \"–≥–æ—Ç–æ–≤–æ\" —á—Ç–æ–±—ã –≤—ã–π—Ç–∏", reply_markup=new_markup)

    query.answer(text="‚úÖ –†–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏–ª—Å—è")

def workplaces(update: Update, context: CallbackContext) -> None:
    if update.message.chat_id != int(CHAT_ID):
        update.message.reply_text(text=f"üö´ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    keyboard = get_keyboard()
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(text="–°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å/–æ—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–∞–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ \"–≥–æ—Ç–æ–≤–æ\" —á—Ç–æ–±—ã –≤—ã–π—Ç–∏", reply_markup=reply_markup)

def main():
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("workplaces", workplaces))
    dp.add_handler(CallbackQueryHandler(button))

    updater.start_polling()
    updater.idle()